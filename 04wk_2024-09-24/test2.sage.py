

# This file was *autogenerated* from the file test2.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_2 = Integer(2); _sage_const_3 = Integer(3); _sage_const_4 = Integer(4); _sage_const_5 = Integer(5); _sage_const_6 = Integer(6)
load('weightedGraphs2.sage')

# ex: edges = [(1,2),(2,3),(1,3)]
c_3 = [(_sage_const_1 ,_sage_const_2 ), (_sage_const_2 ,_sage_const_3 ), (_sage_const_3 ,_sage_const_1 )]
c_4 = [(_sage_const_1 ,_sage_const_2 ), (_sage_const_2 ,_sage_const_3 ), (_sage_const_3 ,_sage_const_4 ), (_sage_const_4 ,_sage_const_1 )]
c_5 = [(_sage_const_1 ,_sage_const_2 ), (_sage_const_2 ,_sage_const_3 ), (_sage_const_3 ,_sage_const_4 ), (_sage_const_4 ,_sage_const_5 ), (_sage_const_5 ,_sage_const_1 )]
c_4plus1 = [(_sage_const_1 ,_sage_const_2 ), (_sage_const_2 ,_sage_const_3 ), (_sage_const_3 ,_sage_const_4 ), (_sage_const_4 ,_sage_const_1 ), (_sage_const_1 ,_sage_const_3 )]
c_5plus1 = [(_sage_const_1 ,_sage_const_2 ), (_sage_const_2 ,_sage_const_3 ), (_sage_const_3 ,_sage_const_4 ), (_sage_const_4 ,_sage_const_5 ), (_sage_const_5 ,_sage_const_1 ), (_sage_const_4 ,_sage_const_1 )]
c_5plus1_alt = [(_sage_const_1 ,_sage_const_2 ), (_sage_const_2 ,_sage_const_3 ), (_sage_const_3 ,_sage_const_4 ), (_sage_const_4 ,_sage_const_5 ), (_sage_const_5 ,_sage_const_1 ), (_sage_const_4 ,_sage_const_2 )]
c_6plus1 = [(_sage_const_1 ,_sage_const_2 ), (_sage_const_2 ,_sage_const_3 ), (_sage_const_3 ,_sage_const_4 ), (_sage_const_4 ,_sage_const_5 ), (_sage_const_5 ,_sage_const_6 ), (_sage_const_6 ,_sage_const_1 ), (_sage_const_1 ,_sage_const_4 )]
c_6plus1_alt = [(_sage_const_1 ,_sage_const_2 ), (_sage_const_2 ,_sage_const_3 ), (_sage_const_3 ,_sage_const_4 ), (_sage_const_4 ,_sage_const_5 ), (_sage_const_5 ,_sage_const_6 ), (_sage_const_6 ,_sage_const_1 ), (_sage_const_1 ,_sage_const_3 )]
c_6plus1_alt2 = [(_sage_const_1 ,_sage_const_2 ), (_sage_const_2 ,_sage_const_3 ), (_sage_const_3 ,_sage_const_4 ), (_sage_const_4 ,_sage_const_5 ), (_sage_const_5 ,_sage_const_6 ), (_sage_const_6 ,_sage_const_1 ), (_sage_const_1 ,_sage_const_5 )]
k_4=[(_sage_const_1 ,_sage_const_2 ),(_sage_const_2 ,_sage_const_3 ),(_sage_const_3 ,_sage_const_4 ),(_sage_const_1 ,_sage_const_3 ),(_sage_const_1 ,_sage_const_4 ),(_sage_const_2 ,_sage_const_4 )]


#G1
print("Graph 1:")
G1 = Graph(k_4) # Change graph 1 <-------
assign_weights(G1)
# Display matrix-tree
print(G1.laplacian_matrix())
print("#SpanningTs: ", G1.spanning_trees_count())
# Print the edge weights
print(f"Edge weights: {G1.edge_labels()}")
# Get the product of edge weights for each spanning tree
products1 = product_of_edges_in_spanning_trees(G1)
# Display the products
print(f"Products of edge weights for each spanning tree: {products1}")
print(f"Sum of the products: {sum(products1)}")
# plot
plotG1 = G1.plot()
plotG1.save("week3G1.png")
print()

#G2
print("Graph 2:")
G2 = Graph(k_4) # Change graph 2 <-------
assign_weights(G2)
# Display matrix-tree
print(G2.laplacian_matrix())
print("#SpanningTs: ", G2.spanning_trees_count())
# Print the edge weights
print(f"Edge weights: {G2.edge_labels()}")
# Get the product of edge weights for each spanning tree
products2 = product_of_edges_in_spanning_trees(G2)
# Display the products
print(f"Products of edge weights for each spanning tree: {products2}")
print(f"Sum of the products: {sum(products2)}")
# plot
plotG2 = G2.plot()
plotG2.save("week3G2.png")
print() 

